#!/usr/bin/env bash

# This file generates a manifest for a given type of package
# Exemple "./manifest nginx"
#
# 1. List all files in S3 bucket in $STACK/package/nginx*.tgz
# 2. Create a file "manifest.nginx"
# 3. Upload "manifest.nginx" in the object storage
#
# Why? So tools like semver are able to check which versions are available to
# use and when a new version is released it can be automatically taken into account

manifest_type="$1"

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source "$basedir/../bin/common.sh"
source "$basedir/lib/utils"
source "$basedir/lib/s3.lib.sh"

if [ -z "$manifest_type" ]; then
    echo "Usage: $0 <nginx>" >&2
    exit 1
fi

validate_env

# make a temp directory
tempdir="$( mktmpdir manifest )"

echo "-----> Manifest for $manifest_type"

manifest_file="manifest.${manifest_type}"

s3_list "$S3_BUCKET" "${STACK}/package/" \
	| jq -r ".Contents[].Key" \
	| sed "s/${STACK}\/package\///" \
	| grep "\.tgz$" \
	| grep "^${manifest_type}" \
	| grep -v -e ".md5" \
	| sed -e "s/${manifest_type}-\([0-9.]*\)\\.tgz/\\1/" \
	| awk 'BEGIN {FS="."} {printf("%03d.%03d.%03d %s\n",$1,$2,$3,$0)}' \
	| sort -r \
	| cut -d" " -f2 \
	> "${tempdir}/${manifest_file}"

if [ ! -s "${tempdir}/${manifest_file}" ]; then
	echo "The manifest that has just been generated is empty." >&2
	echo "This is not OK. Aborting." >&2
	exit 2
fi

cat "${tempdir}/${manifest_file}" | indent

echo
echo "-----> Uploading manifest to S3"

s3_upload "${S3_BUCKET}" "${tempdir}/${manifest_file}" "${STACK}/${manifest_file}"
